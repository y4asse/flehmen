// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// NextActionsColumns holds the columns for the "next_actions" table.
	NextActionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "score_min", Type: field.TypeInt},
		{Name: "score_max", Type: field.TypeInt},
		{Name: "action", Type: field.TypeString},
	}
	// NextActionsTable holds the schema information for the "next_actions" table.
	NextActionsTable = &schema.Table{
		Name:       "next_actions",
		Columns:    NextActionsColumns,
		PrimaryKey: []*schema.Column{NextActionsColumns[0]},
	}
	// SpecialEventsColumns holds the columns for the "special_events" table.
	SpecialEventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "occured_at", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString},
		{Name: "detail_comment", Type: field.TypeString},
		{Name: "user_special_events", Type: field.TypeInt, Nullable: true},
	}
	// SpecialEventsTable holds the schema information for the "special_events" table.
	SpecialEventsTable = &schema.Table{
		Name:       "special_events",
		Columns:    SpecialEventsColumns,
		PrimaryKey: []*schema.Column{SpecialEventsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "special_events_users_special_events",
				Columns:    []*schema.Column{SpecialEventsColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SukipisColumns holds the columns for the "sukipis" table.
	SukipisColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "liked_at", Type: field.TypeTime},
		{Name: "weight", Type: field.TypeFloat64, Nullable: true},
		{Name: "height", Type: field.TypeFloat64, Nullable: true},
		{Name: "x_id", Type: field.TypeString, Nullable: true},
		{Name: "hobby", Type: field.TypeString, Nullable: true},
		{Name: "birthday", Type: field.TypeTime, Nullable: true},
		{Name: "shoes_size", Type: field.TypeFloat64, Nullable: true},
		{Name: "family", Type: field.TypeString, Nullable: true},
		{Name: "nearly_station", Type: field.TypeString, Nullable: true},
		{Name: "mbti", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "sukipi_user", Type: field.TypeInt, Nullable: true},
	}
	// SukipisTable holds the schema information for the "sukipis" table.
	SukipisTable = &schema.Table{
		Name:       "sukipis",
		Columns:    SukipisColumns,
		PrimaryKey: []*schema.Column{SukipisColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sukipis_users_user",
				Columns:    []*schema.Column{SukipisColumns[13]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TweetsColumns holds the columns for the "tweets" table.
	TweetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "text", Type: field.TypeString},
		{Name: "tweet_id", Type: field.TypeInt, Unique: true},
		{Name: "tweet_created_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "sukipi_tweets", Type: field.TypeInt, Nullable: true},
		{Name: "reply_twitter_user_id", Type: field.TypeInt, Nullable: true},
	}
	// TweetsTable holds the schema information for the "tweets" table.
	TweetsTable = &schema.Table{
		Name:       "tweets",
		Columns:    TweetsColumns,
		PrimaryKey: []*schema.Column{TweetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tweets_sukipis_tweets",
				Columns:    []*schema.Column{TweetsColumns[5]},
				RefColumns: []*schema.Column{SukipisColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tweets_twitter_users_replies",
				Columns:    []*schema.Column{TweetsColumns[6]},
				RefColumns: []*schema.Column{TwitterUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TwitterUsersColumns holds the columns for the "twitter_users" table.
	TwitterUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "username", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// TwitterUsersTable holds the schema information for the "twitter_users" table.
	TwitterUsersTable = &schema.Table{
		Name:       "twitter_users",
		Columns:    TwitterUsersColumns,
		PrimaryKey: []*schema.Column{TwitterUsersColumns[0]},
	}
	// UniversitiesColumns holds the columns for the "universities" table.
	UniversitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "deviation_lower_value", Type: field.TypeInt},
		{Name: "deviation_upper_value", Type: field.TypeInt},
		{Name: "abbreviation", Type: field.TypeString},
		{Name: "prefecture", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// UniversitiesTable holds the schema information for the "universities" table.
	UniversitiesTable = &schema.Table{
		Name:       "universities",
		Columns:    UniversitiesColumns,
		PrimaryKey: []*schema.Column{UniversitiesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "university_name_abbreviation",
				Unique:  true,
				Columns: []*schema.Column{UniversitiesColumns[1], UniversitiesColumns[4]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "weight", Type: field.TypeFloat64},
		{Name: "height", Type: field.TypeFloat64},
		{Name: "clerk_id", Type: field.TypeString, Unique: true},
		{Name: "is_male", Type: field.TypeBool},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_sukipis", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_sukipis_sukipis",
				Columns:    []*schema.Column{UsersColumns[7]},
				RefColumns: []*schema.Column{SukipisColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		NextActionsTable,
		SpecialEventsTable,
		SukipisTable,
		TweetsTable,
		TwitterUsersTable,
		UniversitiesTable,
		UsersTable,
	}
)

func init() {
	SpecialEventsTable.ForeignKeys[0].RefTable = UsersTable
	SukipisTable.ForeignKeys[0].RefTable = UsersTable
	TweetsTable.ForeignKeys[0].RefTable = SukipisTable
	TweetsTable.ForeignKeys[1].RefTable = TwitterUsersTable
	UsersTable.ForeignKeys[0].RefTable = SukipisTable
}
